on:
  push:
  pull_request:

jobs:
  setup:
    name: Setup nightly
    runs-on: ubuntu-latest
    outputs:
      rust_nightly: ${{ steps.setup.outputs.rust_nightly }}
    steps:
      - uses: actions/checkout@v4
      - name: Install nightly
        id: setup
        run: |
          rustup install nightly > /dev/null 2>&1
          echo "::set-output name=rust_nightly::nightly"
    continue-on-error: true

  rustfmt:
    name: Rustfmt
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rustfmt
        run: rustup component add rustfmt --toolchain ${{ needs.setup.outputs.rust_nightly }}
      - name: Cargo fmt
        run: cargo +${{ needs.setup.outputs.rust_nightly }} fmt --all

  clippy:
    name: Lint Code
    needs: [setup, rustfmt]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Clippy for nightly
        run: rustup component add clippy --toolchain ${{ needs.setup.outputs.rust_nightly }}
      - name: Run Clippy
        run: cargo +${{ needs.setup.outputs.rust_nightly }} clippy --workspace --all-targets --message-format=json -- -D warnings | tee clippy.json

  build:
    name: Build
    needs: [setup, rustfmt, clippy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cargo build
        run: cargo +${{ needs.setup.outputs.rust_nightly }} build --workspace --release

  tests:
    name: Tests
    needs: [setup, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cargo test
        run: cargo +${{ needs.setup.outputs.rust_nightly }} test --workspace --release